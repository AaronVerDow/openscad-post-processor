#!/bin/bash
set -euo pipefail


CRE="$(echo -e '\r\033[K')"
RED="$(echo -e '\033[1;31m')"
GREEN="$(echo -e '\033[1;32m')"
YELLOW="$(echo -e '\033[1;33m')"
BLUE="$(echo -e '\033[1;34m')"
MAGENTA="$(echo -e '\033[1;35m')"
CYAN="$(echo -e '\033[1;36m')"
WHITE="$(echo -e '\033[1;37m')"
NORMAL="$(echo -e '\033[0;39m')"
export CRE RED GREEN YELLOW BLUE MAGENTA CYAN WHITE NORMAL


process_all_comments() {
    local file=$1
    local cmd=$2

    local module=""
    local no_hits=1
    while read -r line; do
        maybe=$( echo "$line" | grep -E '^\s*module ' | sed 's/\s*module\s*//' | grep -E -o '^[^(]*' ) || true
        [ -z "$maybe" ] || module="$maybe"

        if echo "$line" | grep -q 'RENDER'; then
           render=${line#*RENDER }   # delete everything leading up to RENDER
           continue
        fi

        echo "$line" | grep -q 'PREVIEW' || continue
        filetype=${render/ *}     # keep first word
        args=""
        echo "$render" | grep -q " " && args=${render#* }
        if echo "$filetype" | grep -q '\.'; then
            output=$filetype
            filetype=${output#*.}
        else
            output="output/${file%.*}_$module.$filetype"
        fi

        if [ "$filetype" == "scad" ]; then
            $cmd openscad "$output" &
            no_hits=0
            continue
        fi
        if [ "$filetype" == "png" ]; then
            $cmd feh "$output"
            no_hits=0
            continue
        fi
    done < <( tac "$file" )
    return $no_hits
}

start_once() {
    pgrep -f "$*" > /dev/null && return 0
    nohup "$@" &
}

_kill() {
    pgrep -f "$*" | xargs kill
}

process_one() {
    local file=$1
    local cmd=$2
    $cmd openscad "$file"
}

main() {

    cmd="start_once"

    if [ "$1" == "--kill" ]; then
        cmd=_kill
        shift
    fi

    file=$1

    [ "$file" ] || fail "File not specified"
    [ "${2:-}" ] && fail "Too many options"
    [ -f "$file" ] || fail "File does not exist"
    echo "$file" | grep -q '\.scad$' || fail "Not an scad file"
    process_all_comments "$file" "$cmd" || true
    # process_one "$file" "$cmd"
}

main "${@:-}"
